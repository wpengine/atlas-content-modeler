# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
  php: circleci/php@1.1.0
  node: circleci/node@4.9.0
  browser-tools: circleci/browser-tools@1.4.8

commands:
  set_version_variable:
    description: "Set the VERSION environment variable"
    steps:
      - run:
          command: |
            echo "export VERSION=$(grep 'Version:' ~/project/atlas-content-modeler/atlas-content-modeler.php | awk -F: '{print $2}' | sed 's/^\s//')" >> ${BASH_ENV}

jobs:
  plugin-checkout:
    docker:
      - image: circleci/php:7.4
    steps:
      - checkout
      - run:
          name: Make artifacts build directory
          command: |
            [ ! -d "build" ] && mkdir build &>/dev/null
      - persist_to_workspace:
          root: .
          paths:
            - .

  plugin-build-composer:
    executor: php/default
    steps:
      - attach_workspace:
          at: .
      - php/install-composer
      - php/install-packages:
          app-dir: atlas-content-modeler
          install-flags: --no-interaction --prefer-dist --ignore-platform-reqs
      - run:
          name: Remove composer setup file
          command: |
            rm -v composer-setup.php
      - persist_to_workspace:
          root: .
          paths:
            - atlas-content-modeler/vendor

  plugin-build-npm:
    executor:
      name: node/default
      tag: '16.13.0'
    steps:
      - attach_workspace:
          at: .
      - node/install-packages:
          app-dir: atlas-content-modeler
      - run:
          name: NPM build
          command: |
            npm run build
          working_directory: atlas-content-modeler
      - persist_to_workspace:
          root: .
          paths:
            - .

  plugin-build-readme:
    executor:
      name: node/default
      tag: '16.13.0'
    steps:
      - attach_workspace:
          at: .
      - run:
          name: NPM build readme.txt
          command: |
            npm run build-readme
          working_directory: atlas-content-modeler
      - persist_to_workspace:
          root: .
          paths:
             - atlas-content-modeler/readme.txt

  plugin-build-json:
    executor:
      name: node/default
      tag: '16.13.0'
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Generate JSON metadata
          command: |
            echo "Generating JSON metadata for build..."
      - persist_to_workspace:
          root: .
          paths:
            - build

  plugin-build-pot:
    executor: php/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install WP-CLI
          command: |
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            ./wp-cli.phar --info
      - run:
          name: Build .pot file
          command: |
            ./wp-cli.phar i18n make-pot ~/project/atlas-content-modeler
      - persist_to_workspace:
            root: .
            paths:
              - atlas-content-modeler/languages

  plugin-build-zip:
    executor: php/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Bundle plugin files into a zip"
          command: |
            zip --verbose -x@atlas-content-modeler/.zipignore -x *.wpe/* */build/ -r "build/atlas-content-modeler.$BUILD_VERSION.zip" atlas-content-modeler
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: .
          paths:
            - build

  plugin-test-e2e:
    docker:
      - image: cimg/php:8.2-browsers
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: wordpress
          MYSQL_DATABASE: wordpress
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
    steps:
      - attach_workspace:
          at: .

      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Install mysql_client
          command: |
            sudo apt-get update -yq
            sudo apt-get install default-mysql-client
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      - run:
          name: Install WP-CLI
          command: |
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            ./wp-cli.phar --info

      - run:
          name: Download WordPress
          command: |
            mkdir /tmp/wordpress
            ./wp-cli.phar core download  --path=/tmp/wordpress --version=latest

      - run:
          name: Set up wp-config file
          command: |
            ./wp-cli.phar config create --path=/tmp/wordpress --dbname=wordpress --dbuser=root --dbpass=wordpress --dbhost=127.0.0.1:3306 --force --extra-php \<<PHP
            define( 'WP_SITEURL', 'http://localhost:5501' );
            define( 'WP_HOME', 'http://localhost:5501' );
            PHP

      - run:
          name: Install WordPress
          command: |
            ./wp-cli.phar core install --path=/tmp/wordpress --url=http://localhost:5501 --title="WPE Headless Testing" --admin_user=admin --admin_password=password --admin_email=admin@example.com --skip-email

      - run:
          name: Activate atlas-content-modeler plugin
          command: |
            ./wp-cli.phar plugin install --activate --path=/tmp/wordpress build/$(cat build/file.txt)

      - run:
          name: Install WPGraphQL
          command: |
            ./wp-cli.phar plugin install --path=/tmp/wordpress wp-graphql --activate

      - run:
          working_directory: /home/circleci/project/atlas-content-modeler
          name: Create database dump for Codeception
          command: |
            mkdir -p tests/_data
            ~/project/wp-cli.phar --path=/tmp/wordpress db export tests/_data/dump.sql
            ls -lah tests/_data/dump.sql

      - run:
          name: Start php server
          command: |
            php -S localhost:5501 -t /tmp/wordpress
          background: true

      - run:
          name: Start Chromedriver
          command: |
            chromedriver --url-base=/wd/hub
          background: true

      - run:
          working_directory: /home/circleci/project/atlas-content-modeler
          name: Set up Codeception files
          command: |
            cp .env.testing.circleci .env.testing
            cp tests/acceptance.suite.circleci.yml tests/acceptance.suite.yml

      - run:
          working_directory: /home/circleci/project/atlas-content-modeler
          name: Run Codeception
          command: |
            vendor/bin/codecept build
            vendor/bin/codecept -vvv run acceptance --xml="tests/_output/results.xml" --no-interaction

      - store_test_results:
          path: atlas-content-modeler/tests/_output

      - store_artifacts:
          path: atlas-content-modeler/tests/_output

  plugin-test-jest:
    executor:
      name: node/default
      tag: '16.13.0'
    steps:
      - attach_workspace:
          at: .
      - node/install-packages:
          app-dir: atlas-content-modeler
      - run:
          name: Run Jest tests
          command: |
            npm run test-no-watch
          working_directory: atlas-content-modeler

  plugin-test-lint-js:
    executor:
      name: node/default
      tag: '16.13.0'
    steps:
      - attach_workspace:
          at: .
      - node/install-packages:
          app-dir: atlas-content-modeler
      - run:
          name: NPM style
          command: |
            npm run style
          working_directory: atlas-content-modeler
      - run:
          name: NPM eslint
          command: |
            npm run lint
          working_directory: atlas-content-modeler

  plugin-test-lint-php:
    working_directory: .
    executor: php/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Code Sniffer sniffs
          command: /usr/local/bin/composer lint && /usr/local/bin/composer phpcs
          working_directory: atlas-content-modeler

  plugin-test-unit:
    docker:
      - image: cimg/php:7.4
      - image: cimg/mysql:8.0
        environment:
          MYSQL_DATABASE: wp_database
          MYSQL_USER: wp_user
          MYSQL_PASSWORD: wp_pass
          MYSQL_ROOT_PASSWORD: password
    parameters:
      wordpress-version:
        type: string
        default: "latest"
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Subversion package
          command: |
            sudo apt-get update -yq
            sudo apt-get install subversion -yq
      - run:
          name: Setup WordPress testing framework
          command: |
            /bin/bash tests/install-wp-tests.sh wp_database wp_user wp_pass 127.0.0.1 <<parameters.wordpress-version>> true
          working_directory: "atlas-content-modeler"
      - run:
          name: Run testing suite
          command: |
            composer test
          working_directory: "atlas-content-modeler"

  plugin-test-content-connect:
    docker:
      - image: cimg/php:7.4
      - image: cimg/mysql:8.0
        environment:
          MYSQL_DATABASE: wp_database
          MYSQL_USER: wp_user
          MYSQL_PASSWORD: wp_pass
          MYSQL_ROOT_PASSWORD: password
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Subversion package
          command: |
            sudo apt-get update -yq
            sudo apt-get install subversion -yq
      - run:
          name: Setup WordPress testing framework
          command: |
            /bin/bash tests/install-wp-tests.sh wp_database wp_user wp_pass 127.0.0.1 6.0 true
          working_directory: atlas-content-modeler
      - run:
          name: Run content connect testing suite
          command: |
            vendor/bin/phpunit --configuration phpunit.content-connect.xml
          working_directory: atlas-content-modeler

workflows:
  plugin:
    jobs:
      - plugin-checkout
      - plugin-build-composer:
          requires:
            - plugin-checkout
      - plugin-build-npm:
          requires:
            - plugin-checkout
      - plugin-build-readme:
          requires:
            - plugin-build-npm
      - plugin-build-json:
          requires:
            - plugin-build-readme
      - plugin-build-pot:
          requires:
            - plugin-checkout
      - plugin-build-zip:
          requires:
            - plugin-build-composer
            - plugin-build-npm
            - plugin-build-pot
      - plugin-test-e2e:
           requires:
             - plugin-build-zip
             - plugin-build-composer
      - plugin-test-jest:
          requires:
            - plugin-build-zip
      - plugin-test-lint-js:
          requires:
            - plugin-build-zip
      - plugin-test-lint-php:
          requires:
            - plugin-build-zip
            - plugin-build-composer
      - plugin-test-unit:
          matrix:
            parameters:
              wordpress-version: [ "nightly", "6.3" ]
          requires:
            - plugin-build-zip
            - plugin-build-composer
      - plugin-test-content-connect:
          requires:
            - plugin-build-zip
            - plugin-build-composer