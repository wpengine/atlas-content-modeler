# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
  wp-product-orb: wpengine/wp-product-orb@1.3.0
  php: circleci/php@1.1.0
  node: circleci/node@4.1.0

jobs:
  checkout:
    executor: wp-product-orb/default
    parameters:
      slug:
        type: string
    steps:
      - checkout:
          path: <<parameters.slug>>
      - persist_to_workspace:
          root: .
          paths:
            - .

  plugin-checkout:
    executor: wp-product-orb/default
    environment:
      WPE_SESSION_DIR: ./.wpe
    parameters:
      slug:
        type: string
      filename:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Make artifacts build directory
          command: |
            [ ! -d "build" ] && mkdir build &>/dev/null
      - wp-product-orb/get-version-from-php:
          filename: <<parameters.slug>>/<<parameters.filename>>
          return_var: BUILD_VERSION
      - wp-product-orb/variable:
          var: BUILD_VERSION
          value: $BUILD_VERSION
      - persist_to_workspace:
          root: .
          paths:
            - .

  plugin-composer:
    executor: php/default
    parameters:
      slug:
        type: string
    steps:
      - attach_workspace:
          at: .
      - php/install-composer
      - php/install-packages:
          app-dir: <<parameters.slug>>
      - run:
          name: Remove composer setup file
          command: |
            rm -v composer-setup.php
      - run:
          name: Composer PHP lint and code sniffer
          command: |
            /usr/local/bin/composer lint && /usr/local/bin/composer phpcs
          working_directory: <<parameters.slug>>
      - persist_to_workspace:
          root: .
          paths:
            - .

  plugin-test:
    docker:
      - image: cimg/php:7.4
      - image: circleci/mysql:5.7
        environment:
          MYSQL_DATABASE: wp_database
          MYSQL_USER: wp_user
          MYSQL_PASSWORD: wp_pass
          MYSQL_ROOT_PASSWORD: password
    parameters:
      slug:
        type: string
    steps:
      - attach_workspace:
          at: .
      - php/install-composer
      - php/install-packages:
          app-dir: <<parameters.slug>>
      - run:
          name: Remove composer setup file
          command: |
            rm -v composer-setup.php
      - run:
          name: Install Subversion package
          command: |
            sudo apt-get update -yq
            sudo apt-get install subversion -yq
      - run:
          name: Setup WordPress testing framework
          command: |
            /bin/bash tests/install-wp-tests.sh wp_database wp_user wp_pass 127.0.0.1 latest true
          working_directory: <<parameters.slug>>
      - run:
          name: Run testing suite
          command: |
            composer test
          working_directory: <<parameters.slug>>

  plugin-bundle-zip:
    executor: wp-product-orb/default
    environment:
      WPE_SESSION_DIR: ./.wpe
    parameters:
      slug:
        type: string
    steps:
      - attach_workspace:
          at: .
      - wp-product-orb/variable-load
      - run:
          name: "Bundle plugin files into a zip"
          command: |
            zip --verbose -x@<<parameters.slug>>/.zipignore -x *.wpe/* */build/ -r "build/<<parameters.slug>>.$BUILD_VERSION.zip" <<parameters.slug>>
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: .
          paths:
            - build

  plugin-bundle-json:
    executor: wp-product-orb/parser
    environment:
      WPE_SESSION_DIR: ./.wpe
    parameters:
      slug:
        type: string
    steps:
      - attach_workspace:
          at: .
      - wp-product-orb/variable-load
      - wp-product-orb/parse-wp-readme:
          infile: <<parameters.slug>>/readme.txt
          outfile: build/<<parameters.slug>>.$BUILD_VERSION.json
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: .
          paths:
            - build

  plugin-deploy:
    executor: wp-product-orb/authenticate
    environment:
      WPE_SESSION_DIR: ./.wpe
    parameters:
      auth_url:
        type: string
      upload_url:
        type: string
      slug:
        type: string
    steps:
      - attach_workspace:
          at: .
      - wp-product-orb/variable-load
      - wp-product-orb/authenticate:
          user: WPE_LDAP_USER
          pass: WPE_LDAP_PASS
          url: <<parameters.auth_url>>
      - wp-product-orb/post-zip:
          url: <<parameters.upload_url>>/<<parameters.slug>>
          zip: build/<<parameters.slug>>.$BUILD_VERSION.zip
          json: build/<<parameters.slug>>.$BUILD_VERSION.json
          version: $BUILD_VERSION

  plugin-npm-build:
    executor:
      name: node/default
      tag: lts
    parameters:
      slug:
        type: string
    working_directory: .
    steps:
      - attach_workspace:
          at: .
      - node/install-packages:
          app-dir: <<parameters.slug>>
      - run:
          name: NPM build
          command: |
            npm run build
          working_directory: <<parameters.slug>>
      - persist_to_workspace:
          root: .
          paths:
            - .

workflows:
  # Workflows defined for each package and plugin.
  # tag example for deploying an update for wpe-content-model: 1.0.0
  plugin:
    jobs:
      - checkout:
          slug: wpe-content-model
          filters:
            tags:
              only: /.*/
      - plugin-checkout:
          slug: wpe-content-model
          filename: wpe-content-model.php
          requires:
            - checkout
          # Enable running this job when a tag is published
          filters:
            tags:
              only: /.*/
      - plugin-composer:
          slug: wpe-content-model
          requires:
            - plugin-checkout
          # Enable running this job when a tag is published
          filters:
            tags:
              only: /.*/
      - plugin-test:
          slug: wpe-content-model
          requires:
            - plugin-composer
          # Enable running this job when a tag is published
          filters:
            tags:
              only: /.*/
      - plugin-npm-build:
          slug: wpe-content-model
          requires:
            - plugin-test
      - plugin-bundle-zip:
          slug: wpe-content-model
          requires:
            - plugin-npm-build
          # Run this job on every commit/PR so the plugin is available as a build artifact
          filters:
            tags:
              only: /.*/
      - plugin-bundle-json:
          slug: wpe-content-model
          requires:
            - plugin-test
          # Run this job on every commit/PR to make sure it's in working order prior to deploying
          filters:
            tags:
              only: /.*/
      - plugin-deploy:
          name: "Deploy zip to api (staging) wpe-content-model"
          slug: wpe-content-model
          requires:
            - plugin-bundle-zip
            - plugin-bundle-json
          filters:
            branches:
              only:
                - main
                - canary
            tags:
              only: /.*/
          context: wpe-ldap-creds
          auth_url: https://auth-staging.wpengine.io/v1/tokens
          upload_url: https://wp-product-info-staging.wpesvc.net/v1/plugins
      - plugin-deploy:
          name: "Deploy zip to api (production) wpe-content-model"
          slug: wpe-content-model
          requires:
            - "Deploy zip to api (staging) wpe-content-model"
          filters:
            branches:
              ignore: /.*/
            tags:
              # tag ex. 1.0.0
              only: /^\S+/
          context: wpe-ldap-creds
          auth_url: https://auth.wpengine.io/v1/tokens
          upload_url: https://wp-product-info.wpesvc.net/v1/plugins
